version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest #v2.49.1
    container_name: concurrency-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker-compose/prometheus:/prometheus
    depends_on:
      java:
        condition: service_healthy

  grafana:
    image: grafana/grafana:10.3.1
    container_name: concurrency-grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./src/main/resources/datasources:/etc/grafana/provisioning/datasources
      - ./src/main/resources/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus

  redis:
    image: redis:7.2.4
    container_name: concurrency-redis
    restart: always
    ports:
      - "6379:6379"
    command: /bin/sh -c "redis-server --requirepass $$REDIS_HOST_PASSWORD"
    env_file:
      - .env

  java:
    container_name: concurrency-java
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - JAVA_OPTS="--enable-preview"
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 30s
      timeout: 2s
      retries: 3
      start_period: 10s
    depends_on:
      - redis
